# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/user/application_security/secret_detection/pipeline/configure
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- test
- secret-detection
- release

checks:
  stage: test
  image: python:3.13-slim
  before_script:
    - apt-get update && apt-get install -y git
    - pip install uv
  script:
    - uv run nox -t checks
  only:
    - merge_requests
    - main

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
variables:
  SECRET_DETECTION_ENABLED: 'true'
secret_detection:
  stage: secret-detection

release:
  stage: release
  image: python:3.13-slim
  before_script:
    - apt-get update && apt-get install -y git
    - pip install uv
  script:
    - uv build
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        echo "Creating release for tag $CI_COMMIT_TAG"
        apt-get install -y curl
        
        # Create GitLab release
        curl --request POST \
          --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
          --header "Content-Type: application/json" \
          --data "{
            \"name\": \"Release $CI_COMMIT_TAG\",
            \"tag_name\": \"$CI_COMMIT_TAG\",
            \"description\": \"Release $CI_COMMIT_TAG\"
          }" \
          "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"
      fi
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - tags
    - main
